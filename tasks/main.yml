#####################################################################################
# Global
#

- name: 'Allow full access from containers'
  ansible.builtin.iptables:
    chain: INPUT
    in_interface: 'br-+'
    jump: ACCEPT
    comment: 'Allow containers access'
  become: true
  when: docker_intra_access | default (false)
  register: iptables_br

- name: 'Allow full access from containers on docker0'
  ansible.builtin.iptables:
    chain: INPUT
    in_interface: 'docker0'
    jump: ACCEPT
    comment: 'Allow containers access on docker0'
  become: true
  when: docker_intra_access | default (false)
  register: iptables_br2

- name: Save iptables
  shell: |
    iptables-save | grep -v 'TEMP ' | grep -v 'LIBVIRT_' \
    | grep -v -i 'docker' | grep -v 'A FORWARD ' \
    | grep -v 'ufw-' >/etc/iptables/rules.v4
  become: true
  check_mode: no
  when:
    - iptables_br.changed or iptables_br2.changed
    - docker_intra_access | default (false)

- name: Install packages to allow apt to use a repository over HTTPS
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  become: true

- name: Add Dockers official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add Docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  become: true

- name: Uninstall docker.io package
  apt:
    pkg:
      - docker.io
    state: absent
  become: true

- name: Update the apt package index
  apt:
    update_cache: yes
  become: true

- name: Install latest docker-ce packages
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
  become: true

- name: Ensure Docker service is enabled and started
  systemd:
    name: docker
    enabled: yes
    state: started
  become: true

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false

- debug:
    msg: "Docker version installed: {{ docker_version.stdout }}"

- name: Install python libs
  pip:
    name:
      - "docker==6.1.3"
      - "docker-compose"
  become: true

#- name: Log into private docker registries
#  docker_login:
#    registry: "{{ item.host }}"
#    username: "{{ item.login }}"
#    password: "{{ item.password }}"
#  become: true
#  loop: "{{ docker_registry | default([]) }}"
#  when:
#    - item.password is defined
#    - item.password != ""

- name: Add cronjob to prune images every Saturday
  ansible.builtin.cron:
    name: docker_image_prune
    weekday: "6"
    minute: "05"
    hour: "05"
    user: root
    job: "docker image prune -f && docker builder prune -f && docker system prune -f && docker container prune -f"
    cron_file: docker_image_prune
  become: true
